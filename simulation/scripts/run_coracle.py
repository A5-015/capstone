#!/usr/bin/env python

"""Runs the Coracle simulator using the configuration file
generated by sim_config_json.py and visualizes the result as a PDF report
"""

import os
import sys
import json
import subprocess
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

class Visualizer():

    def __init__(self):
        self.tables = []
        self.figures = []

    def parse(self, results):
        for key,value in results.items():

            if (key == "table"):
                self.tables.append(value)

            elif (key == "figures"):
                self.figures.append(value)

            if type(value) is dict:
                self.parse(value)

    def generate_pdf(self):

        df = pd.DataFrame.from_dict(self.tables[0], orient='index')

        fig, ax = plt.subplots(figsize=(10, 6))
        plt.axis('off')

        pd.plotting.table(ax, df, loc='center')
        fig.tight_layout()
        plt.savefig("test.png")


def main(arguments):

    opam_eval = 'eval `opam config env --safe`'
    val = subprocess.check_output("%s && ./../coracle/coracle_sim.byte %s %s" % (opam_eval, "-f", "test.json"), shell=True)
    raw_out = json.loads(val)
    raw_res = raw_out['results']

    visualizer = Visualizer()
    visualizer.parse(raw_res)
    visualizer.generate_pdf()

if __name__ == '__main__':
    sys.exit(main(sys.argv[1:]))
